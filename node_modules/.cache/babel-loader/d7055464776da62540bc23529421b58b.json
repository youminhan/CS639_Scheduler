{"ast":null,"code":"import _slicedToArray from\"/Users/youminhan/Desktop/CS639_Scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/youminhan/Desktop/CS639_Scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/youminhan/Desktop/CS639_Scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var SearchAndFilter=/*#__PURE__*/function(){function SearchAndFilter(){_classCallCheck(this,SearchAndFilter);}_createClass(SearchAndFilter,[{key:\"searchAndFilter\",value:function searchAndFilter(courses,allTags,searchMode){return searchMode===\"Fit all the tags\"?Object.fromEntries(Object.entries(courses).filter(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],course=_ref2[1];return allTags.every(function(tag){return course['keywords'].includes(tag);});})):Object.fromEntries(Object.entries(courses).filter(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],course=_ref4[1];return allTags.length===0?courses:course['keywords'].some(function(tag){return allTags.includes(tag);});}));}}]);return SearchAndFilter;}();export default SearchAndFilter;","map":{"version":3,"sources":["/Users/youminhan/Desktop/CS639_Scheduler/src/SearchAndFilter.js"],"names":["SearchAndFilter","courses","allTags","searchMode","Object","fromEntries","entries","filter","key","course","every","tag","includes","length","some"],"mappings":"8dAAMA,CAAAA,e,+KACYC,O,CAASC,O,CAASC,U,CAAY,CAC5C,MAAOA,CAAAA,UAAU,GAAK,kBAAf,CACLC,MAAM,CAACC,WAAP,CAAmBD,MAAM,CAACE,OAAP,CAAeL,OAAf,EAAwBM,MAAxB,CAA+B,cAAkB,kCAAhBC,GAAgB,UAAZC,MAAY,UAClE,MAAOP,CAAAA,OAAO,CAACQ,KAAR,CAAc,SAAAC,GAAG,CAAI,CAC1B,MAAOF,CAAAA,MAAM,CAAC,UAAD,CAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CAAP,CACD,CAFM,CAAP,CAGD,CAJkB,CAAnB,CADK,CAMLP,MAAM,CAACC,WAAP,CAAmBD,MAAM,CAACE,OAAP,CAAeL,OAAf,EAAwBM,MAAxB,CAA+B,eAAkB,mCAAhBC,GAAgB,UAAZC,MAAY,UAClE,MAAOP,CAAAA,OAAO,CAACW,MAAR,GAAmB,CAAnB,CAAuBZ,OAAvB,CAAiCQ,MAAM,CAAC,UAAD,CAAN,CAAmBK,IAAnB,CAAwB,SAAAH,GAAG,CAAI,CACrE,MAAOT,CAAAA,OAAO,CAACU,QAAR,CAAiBD,GAAjB,CAAP,CACD,CAFuC,CAAxC,CAGD,CAJkB,CAAnB,CANF,CAWD,C,+BAGH,cAAeX,CAAAA,eAAf","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, allTags, searchMode) {\r\n    return searchMode === \"Fit all the tags\" ? \r\n      Object.fromEntries(Object.entries(courses).filter(([key,course]) => {\r\n        return allTags.every(tag => {\r\n          return course['keywords'].includes(tag)\r\n        })\r\n      })) :\r\n      Object.fromEntries(Object.entries(courses).filter(([key,course]) => {\r\n        return allTags.length === 0 ? courses : course['keywords'].some(tag => {\r\n          return allTags.includes(tag)\r\n        })\r\n      }));\r\n  }\r\n}\r\n\r\nexport default SearchAndFilter;\r\n"]},"metadata":{},"sourceType":"module"}