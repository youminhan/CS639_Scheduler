{"ast":null,"code":"var _jsxFileName = \"/Users/youminhan/University of Wisconsin-Madison/Fall2019/CS 639/cs639-react-3-youminhan/src/Cart.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nclass Cart extends React.Component {\n  getCredits(credits) {\n    if (credits === 1) return '1 credit';else return credits + ' credits';\n  }\n\n  getCourses() {\n    var courses = this.props.data;\n    return Object.keys(courses).map((key, index) => {\n      return React.createElement(Card, {\n        style: {\n          marginTop: '5px',\n          marginBottom: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => {\n          const callbackFromCart = this.props.callbackFromCart;\n          callbackFromCart(courses[key], courses[key].sections, null, null, null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Remove All Sections\"), React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, courses[key].name), React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, courses[key].number, \" - \", this.getCredits(courses[key].credits)), React.createElement(Table, {\n        variant: \"dark\",\n        bordered: true,\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Lecture\"), React.createElement(\"th\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"th\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Add to schedule\"), React.createElement(\"th\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Option\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.renderTableData(courses[key])))));\n    });\n  }\n\n  renderTableData(course) {\n    var sections = course.sections;\n    return Object.keys(sections).map((key, index) => {\n      return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"lec\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, key), React.createElement(\"td\", {\n        className: \"lec\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" \", Object.entries(sections[key].time).join(\" ; \"), \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => {\n          const callbackFromCart = this.props.callbackFromCart;\n          callbackFromCart(course, sections, key, null, null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Add to Schedule\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => {\n          const callbackFromCart = this.props.callbackFromCart;\n          callbackFromCart(course, sections, key, null, null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Remove Lecture\"))), this.getDis(course, sections, key));\n    });\n  }\n\n  getDis(course, section, choice) {\n    var discussions = section[choice].subsections;\n    return Object.keys(discussions).map((subseckey, index) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\", subseckey), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, Object.entries(discussions[subseckey].time).join(\" ; \")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => {\n          const callbackFromCart = this.props.callbackFromCart;\n          callbackFromCart(course, section, choice, discussions, subseckey);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Remove Section\")));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        margin: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.getCourses()));\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/youminhan/University of Wisconsin-Madison/Fall2019/CS 639/cs639-react-3-youminhan/src/Cart.js"],"names":["React","Card","CardColumns","Table","Button","Cart","Component","getCredits","credits","getCourses","courses","props","data","Object","keys","map","key","index","marginTop","marginBottom","callbackFromCart","sections","name","number","renderTableData","course","entries","time","join","getDis","section","choice","discussions","subsections","subseckey","render","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nclass Cart extends React.Component {\n\n    getCredits(credits) {\n        if(credits === 1)\n            return '1 credit';\n        else\n            return credits + ' credits';\n    }\n\n\n    getCourses() {\n    var courses = this.props.data;\n    return Object.keys(courses).map((key, index) => {\n        return (   \n           <Card style={{marginTop: '5px', marginBottom: '5px'}}>\n              \n            <Card.Body>\n                <Button variant=\"danger\" onClick={() => { \n                const {callbackFromCart} = this.props;\n                callbackFromCart(courses[key], courses[key].sections, null, null, null);\n                }}>Remove All Sections</Button>  \n                <Card.Title>{courses[key].name}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">{courses[key].number} - {this.getCredits(courses[key].credits)}</Card.Subtitle>\n            <Table variant=\"dark\" bordered striped>\n            <thead>\n              <tr>\n                <th className=\"head\">Lecture</th>\n                <th className=\"head\" >Time</th>\n                <th className=\"head\" >Add to schedule</th>\n                <th className=\"head\">Option</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderTableData(courses[key])}\n            </tbody>\n            </Table>\n            </Card.Body>\n            </Card>\n        )\n    })\n    }\n\n    renderTableData(course) {\n        var sections = course.sections;\n        return Object.keys(sections).map((key, index) => {\n          return (\n             <>\n             <tr key={index} >\n                <td className=\"lec\" >{ key }</td>\n                <td className=\"lec\"> { Object.entries(sections[key].time).join(\" ; \") } </td>\n                <td ><Button variant=\"danger\" onClick={() => {\n                const {callbackFromCart} = this.props;\n                callbackFromCart(course, sections, key, null, null);\n                }}>Add to Schedule</Button></td>\n                <td ><Button variant=\"danger\" onClick={() => {\n                const {callbackFromCart} = this.props;\n                callbackFromCart(course, sections, key, null, null);\n                }}>Remove Lecture</Button></td>\n             </tr>\n             {this.getDis(course, sections, key)}\n             </>\n          )\n        })\n    }\n\n    \n    getDis(course, section, choice) {\n        var discussions = section[choice].subsections;\n        return Object.keys(discussions).map((subseckey,index) => {\n        return (\n            <tr>\n            <td >&nbsp;&nbsp;&nbsp;{subseckey}</td>\n            <td >{Object.entries(discussions[subseckey].time).join(\" ; \")}</td>\n            <td ><Button size=\"sm\" variant=\"danger\" onClick={() => {\n                const {callbackFromCart} = this.props;\n                callbackFromCart(course, section, choice, discussions, subseckey );\n                }}>Remove Section</Button></td>\n            </tr>\n        )\n        })\n    }\n\n    render() {\n        return (\n        <div style={{margin: '5px'}}>\n            <CardColumns>\n            {this.getCourses()}\n            </CardColumns>\n        </div>\n        )\n    }\n  \n  \n  \n  }\n  \nexport default Cart;\n  "]},"metadata":{},"sourceType":"module"}