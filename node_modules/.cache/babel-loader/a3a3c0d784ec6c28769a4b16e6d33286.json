{"ast":null,"code":"var _jsxFileName = \"/Users/youminhan/University of Wisconsin-Madison/Fall2019/CS 639/cs639-react-3-youminhan/src/Sidebar.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport SearchAndFilter from './SearchAndFilter';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formSubmitter = event => {\n      // Wait until user actively submit form\n      event.preventDefault();\n      this.selectedTags.push(this.tag.current.value);\n      this.setCourses();\n      this.myFormRef.reset();\n    };\n\n    this.searchAndFilter = new SearchAndFilter();\n    this.tag = React.createRef();\n    this.selectedTags = [];\n    this.searchMode = React.createRef();\n  }\n\n  setCourses() {\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, this.selectedTags, this.searchMode.current.value));\n  }\n\n  showSelectedTags() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.selectedTags.length !== 0 ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Your tags\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Click above to add a tag.\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.selectedTags.map((oneTag, index) => React.createElement(ListGroup.Item, {\n      variant: \"dark\",\n      ref: index,\n      key: oneTag.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, oneTag, React.createElement(Button, {\n      variant: \"dark\",\n      style: {\n        marginLeft: '5px'\n      },\n      onClick: this.removeTag.bind(this, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Delete\")))));\n  } // Handle the submission event\n\n\n  getModeOptions() {\n    let selectionOptions = [];\n\n    for (const mode of this.props.searchMode) {\n      selectionOptions.push(React.createElement(\"option\", {\n        key: mode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, mode));\n    }\n\n    return selectionOptions;\n  }\n\n  removeTag(index) {\n    this.selectedTags.splice(index, 1);\n    this.setCourses();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      style: {\n        width: 'calc(20vw - 5px)',\n        marginTop: '2px',\n        marginLeft: '5px',\n        height: 'calc(100vh - 10px)',\n        position: 'fixed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Search by tags\"), React.createElement(Form, {\n      onClick: this.formSubmitter,\n      ref: el => this.myFormRef = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formTags\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Add tag\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Tag\",\n      autoComplete: \"off\",\n      ref: this.tag,\n      list: \"myDropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"dark\",\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Add tag\"))), React.createElement(Form.Group, {\n      controlId: \"formSubject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Search Mode\"), React.createElement(Form.Control, {\n      as: \"select\",\n      ref: this.searchMode,\n      onChange: () => this.setCourses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.getModeOptions())), this.showSelectedTags())));\n  }\n\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/youminhan/University of Wisconsin-Madison/Fall2019/CS 639/cs639-react-3-youminhan/src/Sidebar.js"],"names":["React","Card","Form","Button","SearchAndFilter","ListGroup","Sidebar","Component","constructor","props","formSubmitter","event","preventDefault","selectedTags","push","tag","current","value","setCourses","myFormRef","reset","searchAndFilter","createRef","searchMode","courses","showSelectedTags","length","map","oneTag","index","toString","marginLeft","removeTag","bind","getModeOptions","selectionOptions","mode","splice","render","width","marginTop","height","position","el"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport SearchAndFilter from './SearchAndFilter';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.searchAndFilter = new SearchAndFilter();\r\n    this.tag = React.createRef();\r\n    this.selectedTags = [];\r\n    this.searchMode = React.createRef();\r\n  }\r\n\r\n  setCourses() {\r\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, this.selectedTags, this.searchMode.current.value));\r\n  }\r\n\r\n  showSelectedTags() {\r\n    return (\r\n      <div>\r\n        {this.selectedTags.length !== 0 ? <p>Your tags</p> : <p>Click above to add a tag.</p>}\r\n        <ListGroup>\r\n          {\r\n            this.selectedTags.map((oneTag, index) => (\r\n              <ListGroup.Item variant=\"dark\" ref={index} key={oneTag.toString()}>{oneTag}\r\n              <Button variant=\"dark\" style={{marginLeft: '5px'}} onClick={this.removeTag.bind(this, index)}>Delete</Button>\r\n              </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Handle the submission event\r\n  formSubmitter= event => {\r\n    // Wait until user actively submit form\r\n    event.preventDefault();\r\n    this.selectedTags.push(this.tag.current.value);\r\n    this.setCourses();\r\n    this.myFormRef.reset();\r\n  }\r\n\r\n  getModeOptions() {\r\n    let selectionOptions = [];\r\n    for(const mode of this.props.searchMode) {\r\n      selectionOptions.push(<option key={mode}>{mode}</option>);\r\n    }\r\n    return selectionOptions;\r\n  }\r\n\r\n  removeTag(index) {\r\n    this.selectedTags.splice(index, 1);\r\n    this.setCourses();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card style={{width: 'calc(20vw - 5px)', marginTop: '2px', marginLeft: '5px', height: 'calc(100vh - 10px)', position: 'fixed'}}>\r\n          <Card.Body>\r\n            <Card.Title>Search by tags</Card.Title>\r\n            <Form onClick={this.formSubmitter} ref={(el) => this.myFormRef = el}>\r\n              <Form.Group controlId=\"formTags\" style={{width: '100%'}}>\r\n                <Form.Label>Add tag</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Tag\" autoComplete=\"off\" ref={this.tag} list=\"myDropdown\"/>\r\n                <Button variant=\"dark\" style={{marginTop:'5px'}} >Add tag</Button>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form.Group controlId=\"formSubject\">\r\n                <Form.Label>Search Mode</Form.Label>\r\n                <Form.Control as=\"select\" ref={this.searchMode} onChange={() => this.setCourses()}>\r\n                  {this.getModeOptions()}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            {this.showSelectedTags()}\r\n\r\n\r\n\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}